/*
 *  Cannon Fodder
 *  ------------------------
 *
 *  Copyright (C) 2008-2015 Robert Crossfield <robcrossfield@gmail.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 */

unsigned char mUnkStringModifier[] = {
  0x27, 0x2E, 0x2C, 0x21, 0x93, 0x82, 0x87, 0x2D, 0x81, 0x8E, 
  0x99, 0x9A, 0x84, 0x94, 0xA4, 0xA0, 0xA3, 0xA1, 0x3F, 0xA8, 
  0xA5, 0xFF
};

sRecruit_Screen_Pos mRecruit_Screen_Positions[294] = {
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 60, 0 },
  { 305, 58, 0 },
  { 305, 56, 0 },
  { 305, 55, 0 },
  { 304, 54, 0 },
  { 303, 59, 1 },
  { 305, 53, 0 },
  { 304, 53, 0 },
  { 303, 54, 0 },
  { 302, 55, 0 },
  { 301, 56, 0 },
  { 301, 57, 0 },
  { 300, 58, 0 },
  { 300, 59, 0 },
  { 299, 60, 0 },
  { 299, 61, 0 },
  { 298, 62, 0 },
  { 298, 63, 0 },
  { 297, 64, 0 },
  { 297, 65, 0 },
  { 296, 66, 0 },
  { 296, 67, 0 },
  { 296, 68, 0 },
  { 295, 69, 0 },
  { 295, 70, 0 },
  { 295, 71, 0 },
  { 294, 72, 0 },
  { 294, 73, 0 },
  { 294, 74, 0 },
  { 294, 75, 0 },
  { 293, 76, 0 },
  { 293, 79, 0 },
  { 292, 82, 0 },
  { 292, 84, 0 },
  { 291, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 292, 84, 0 },
  { 288, 84, 0 },
  { 287, 82, 0 },
  { 286, 81, 0 },
  { 285, 79, 0 },
  { 285, 77, 0 },
  { 276, 84, 2 },
  { 284, 77, 0 },
  { 283, 78, 0 },
  { 283, 79, 0 },
  { 282, 81, 0 },
  { 281, 82, 0 },
  { 281, 84, 0 },
  { 281, 86, 0 },
  { 281, 87, 0 },
  { 281, 89, 0 },
  { 282, 90, 0 },
  { 282, 92, 0 },
  { 282, 94, 0 },
  { 283, 95, 0 },
  { 283, 97, 0 },
  { 284, 99, 0 },
  { 284, 101, 0 },
  { 285, 103, 0 },
  { 286, 106, 0 },
  { 287, 109, 0 },
  { 287, 112, 0 },
  { 289, 116, 0 },
  { 290, 118, 0 },
  { 292, 121, 0 },
  { 293, 122, 0 },
  { 293, 124, 0 },
  { 294, 126, 0 },
  { 295, 128, 0 },
  { 295, 129, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 295, 133, 0 },
  { 308, 134, 0 },
  { 308, 134, 0 },
  { 308, 132, 0 },
  { 307, 130, 0 },
  { 307, 128, 0 },
  { 307, 126, 0 },
  { 307, 125, 0 },
  { 306, 124, 0 },
  { 288, 121, 3 },
  { 306, 124, 0 },
  { 306, 125, 0 },
  { 305, 126, 0 },
  { 305, 127, 0 },
  { 305, 129, 0 },
  { 304, 130, 0 },
  { 304, 133, 0 },
  { 304, 135, 0 },
  { 304, 137, 0 },
  { 303, 138, 0 },
  { 303, 139, 0 },
  { 304, 141, 0 },
  { 304, 143, 0 },
  { 303, 145, 0 },
  { 303, 147, 0 },
  { 303, 149, 0 },
  { 303, 150, 0 },
  { 303, 152, 0 },
  { 302, 154, 0 },
  { 301, 156, 0 },
  { 301, 158, 0 },
  { 300, 161, 0 },
  { 299, 162, 0 },
  { 298, 163, 0 },
  { 297, 165, 0 },
  { 295, 167, 0 },
  { 294, 168, 0 },
  { 293, 169, 0 },
  { 292, 170, 0 },
  { 291, 172, 0 },
  { 290, 173, 0 },
  { 289, 174, 0 },
  { 288, 175, 0 },
  { 287, 176, 0 },
  { 285, 178, 0 },
  { 283, 179, 0 },
  { 281, 180, 0 },
  { 280, 182, 0 },
  { 278, 183, 0 },
  { 277, 185, 0 },
  { 275, 186, 0 },
  { 273, 186, 0 },
  { 272, 187, 0 },
  { 271, 188, 0 },
  { 269, 189, 0 },
  { 267, 189, 0 },
  { 265, 189, 0 },
  { 263, 190, 0 },
  { 262, 190, 0 },
  { 260, 190, 0 },
  { 258, 190, 0 },
  { 256, 190, 0 },
  { 254, 190, 0 },
  { 252, 190, 0 },
  { 250, 190, 0 },
  { 249, 190, 0 },
  { 247, 190, 0 },
  { 246, 191, 0 },
  { 244, 191, 0 },
  { 242, 191, 0 },
  { 240, 191, 0 },
  { 238, 191, 0 },
  { 236, 191, 0 },
  { 234, 191, 0 },
  { 232, 191, 0 },
  { 230, 191, 0 },
  { 227, 191, 0 },
  { 225, 191, 0 },
  { 223, 191, 0 },
  { 221, 191, 0 },
  { 219, 191, 0 },
  { 217, 191, 0 },
  { 215, 191, 0 },
  { 213, 191, 0 },
  { 211, 191, 0 },
  { 209, 191, 0 },
  { 207, 191, 0 },
  { 205, 191, 0 },
  { 203, 191, 0 },
  { 201, 191, 0 },
  { 199, 191, 0 },
  { 197, 191, 0 },
  { 195, 191, 0 },
  { 193, 191, 0 },
  { 191, 191, 0 },
  { 189, 191, 0 },
  { 187, 191, 0 },
  { 185, 191, 0 },
  { 183, 191, 0 },
  { 181, 191, 0 },
  { 179, 191, 0 },
  { 177, 192, 0 },
  { 175, 192, 0 },
  { 173, 192, 0 },
  { 171, 192, 0 },
  { 169, 192, 0 },
  { 167, 192, 0 },
  { 165, 192, 0 },
  { 163, 193, 0 },
  { 161, 192, 0 },
  { 159, 192, 0 },
  { 157, 192, 0 },
  { 155, 192, 0 },
  { 153, 192, 0 },
  { 151, 192, 0 },
  { 149, 192, 0 },
  { 147, 192, 0 },
  { 145, 192, 0 },
  { 143, 192, 0 },
  { 141, 192, 0 },
  { 139, 192, 0 },
  { 137, 192, 0 },
  { 135, 192, 0 },
  { 133, 192, 0 },
  { 131, 192, 0 },
  { 131, 192, 0 },
  { 129, 192, 0 },
  { 127, 192, 0 },
  { 125, 192, 0 },
  { 123, 192, 0 },
  { 121, 192, 0 },
  { 119, 192, 0 },
  { 117, 192, 0 },
  { 115, 192, 0 },
  { 113, 192, 0 },
  { 111, 192, 0 },
  { 109, 192, 0 },
  { 107, 192, 0 },
  { 105, 192, 0 },
  { 103, 193, 0 },
  { 101, 192, 0 },
  { 99, 192, 0 },
  { 96, 192, 0 },
  { 94, 192, 0 },
  { 92, 192, 0 },
  { 90, 192, 0 },
  { 88, 192, 0 },
  { 86, 192, 0 },
  { 84, 192, 0 },
  { 82, 192, 0 },
  { 80, 192, 0 },
  { 78, 192, 0 },
  { 76, 192, 0 },
  { 74, 192, 0 },
  { 72, 192, 0 },
  { 70, 192, 0 },
  { 68, 192, 0 },
  { 66, 192, 0 },
  { 64, 192, 0 },
  { 62, 192, 0 },
  { 60, 192, 0 },
  { 58, 192, 0 },
  { 56, 192, 0 },
  { 54, 192, 0 },
  { 52, 192, 0 },
  { 50, 192, 0 },
  { 48, 192, 0 },
  { 46, 192, 0 },
  { 44, 192, 0 },
  { 42, 192, 0 },
  { 40, 192, 0 },
  { 38, 192, 0 },
  { 36, 191, 0 },
  { -1, -1, 0 }
};

int16 word_3E115[] =
{
  0x00, 0x01, 0x02, 0x03, 0x04, 
  0x05, 0x06, 0x09, 0x0A, 0x0B, 
  0x09, 
  // word_3E12B
  0x09, 0x0A, 0x0B, 0x09, -1, 
};

int16 word_3E12B[] = { 
	0x09, 0x0A, 0x0B, 0x09, -1 };

int16 word_3E135[] = {
	0x07, 0x07, 0x09, 0x09, 0x08, 0x08, 0x07, 0x07, 0x07, 0x07,
	0x09, 0x09, 0x08, 0x08, 0x07, 0x07, 0x09, 0x09, 0x09, -1
};

int16 word_3E15D[] = {
	0x06, 0x05, 0x05, 0x04, 0x04, 0x03, 0x03, 0x02, 0x02, 0x01, 0x01, 0x00, -1
};

const struct_2 stru_44B50[209] =
{
  { 0, 79, 48, 13 },
  { 48, 79, 48, 13 },
  { 96, 79, 48, 13 },
  { 0, 160, 48, 13 },
  { 48, 160, 48, 13 },
  { 96, 160, 48, 13 },
  { 0, 160, 48, 13 },
  { 96, 160, 48, 13 },
  { 48, 160, 48, 13 },
  { 48, 0, 16, 11 },
  { 64, 0, 16, 11 },
  { 80, 0, 16, 11 },
  { 96, 0, 16, 11 },
  { 112, 0, 16, 11 },
  { 128, 0, 16, 11 },
  { 144, 0, 16, 11 },
  { 160, 0, 16, 11 },
  { 176, 0, 16, 11 },
  { 192, 0, 16, 11 },
  { 208, 0, 16, 11 },
  { 224, 0, 16, 11 },
  { 240, 0, 16, 11 },
  { 256, 0, 16, 11 },
  { 272, 0, 16, 11 },
  { 288, 0, 16, 11 },
  { 304, 0, 16, 11 },
  { 0, 12, 16, 11 },
  { 16, 12, 16, 11 },
  { 32, 12, 16, 11 },
  { 48, 12, 16, 11 },
  { 64, 12, 16, 11 },
  { 80, 12, 16, 11 },
  { 96, 12, 16, 11 },
  { 112, 12, 16, 11 },
  { 128, 12, 16, 11 },
  { 64, 113, 16, 15 },
  { 80, 113, 16, 15 },
  { 0, 113, 16, 15 },
  { 16, 113, 16, 15 },
  { 32, 113, 16, 15 },
  { 48, 113, 16, 15 },
  { 0, 24, 16, 7 },
  { 16, 24, 16, 7 },
  { 32, 24, 16, 7 },
  { 48, 24, 16, 7 },
  { 64, 24, 16, 7 },
  { 80, 24, 16, 7 },
  { 96, 24, 16, 7 },
  { 112, 24, 16, 7 },
  { 128, 24, 16, 7 },
  { 144, 24, 16, 7 },
  { 160, 24, 16, 7 },
  { 176, 24, 16, 7 },
  { 192, 24, 16, 7 },
  { 208, 24, 16, 7 },
  { 224, 24, 16, 7 },
  { 240, 24, 16, 7 },
  { 256, 24, 16, 7 },
  { 272, 24, 16, 7 },
  { 288, 24, 16, 7 },
  { 304, 24, 16, 7 },
  { 0, 32, 16, 7 },
  { 16, 32, 16, 7 },
  { 32, 32, 16, 7 },
  { 48, 32, 16, 7 },
  { 64, 32, 16, 7 },
  { 80, 32, 16, 7 },
  { 96, 32, 16, 7 },
  { 112, 32, 16, 7 },
  { 128, 32, 16, 7 },
  { 144, 32, 16, 7 },
  { 160, 32, 16, 7 },
  { 176, 32, 16, 7 },
  { 192, 32, 16, 7 },
  { 208, 32, 16, 7 },
  { 224, 32, 16, 7 },
  { 240, 32, 16, 7 },
  { 0, 40, 16, 7 },
  { 16, 40, 16, 7 },
  { 32, 40, 16, 7 },
  { 48, 40, 16, 7 },
  { 64, 40, 16, 7 },
  { 80, 40, 16, 7 },
  { 96, 40, 16, 7 },
  { 112, 40, 16, 7 },
  { 128, 40, 16, 7 },
  { 144, 40, 16, 7 },
  { 160, 40, 16, 7 },
  { 176, 40, 16, 7 },
  { 192, 40, 16, 7 },
  { 208, 40, 16, 7 },
  { 224, 40, 16, 7 },
  { 240, 40, 16, 7 },
  { 256, 40, 16, 7 },
  { 272, 40, 16, 7 },
  { 288, 40, 16, 7 },
  { 304, 40, 16, 7 },
  { 0, 48, 16, 7 },
  { 16, 48, 16, 7 },
  { 32, 48, 16, 7 },
  { 48, 48, 16, 7 },
  { 64, 48, 16, 7 },
  { 80, 48, 16, 7 },
  { 96, 48, 16, 7 },
  { 112, 48, 16, 7 },
  { 128, 48, 16, 7 },
  { 144, 48, 16, 7 },
  { 160, 48, 16, 7 },
  { 176, 48, 16, 7 },
  { 192, 48, 16, 7 },
  { 208, 48, 16, 7 },
  { 224, 48, 16, 7 },
  { 240, 48, 16, 7 },
  { 0, 56, 16, 7 },
  { 16, 56, 16, 7 },
  { 32, 56, 16, 7 },
  { 48, 56, 16, 7 },
  { 64, 56, 16, 7 },
  { 80, 56, 16, 7 },
  { 96, 56, 16, 7 },
  { 112, 56, 16, 7 },
  { 128, 56, 16, 7 },
  { 144, 56, 16, 7 },
  { 160, 56, 16, 7 },
  { 176, 56, 16, 7 },
  { 192, 56, 16, 7 },
  { 208, 56, 16, 7 },
  { 224, 56, 16, 7 },
  { 240, 56, 16, 7 },
  { 256, 56, 16, 7 },
  { 272, 56, 16, 7 },
  { 288, 56, 16, 7 },
  { 304, 56, 16, 7 },
  { 0, 64, 16, 7 },
  { 16, 64, 16, 7 },
  { 32, 64, 16, 7 },
  { 48, 64, 16, 7 },
  { 64, 64, 16, 7 },
  { 80, 64, 16, 7 },
  { 96, 64, 16, 7 },
  { 112, 64, 16, 7 },
  { 128, 64, 16, 7 },
  { 144, 64, 16, 7 },
  { 160, 64, 16, 7 },
  { 176, 64, 16, 7 },
  { 192, 64, 16, 7 },
  { 208, 64, 16, 7 },
  { 224, 64, 16, 7 },
  { 240, 64, 16, 7 },
  { 160, 72, 32, 19 },
  { 192, 72, 32, 19 },
  { 224, 72, 32, 19 },
  { 256, 72, 32, 19 },
  { 288, 72, 32, 19 },
  { 0, 93, 32, 19 },
  { 32, 93, 32, 19 },
  { 64, 93, 32, 19 },
  { 96, 93, 32, 19 },
  { 128, 93, 32, 19 },
  { 0, 140, 32, 19 },
  { 32, 140, 32, 19 },
  { 64, 140, 32, 19 },
  { 96, 140, 32, 19 },
  { 128, 140, 32, 19 },
  { 160, 140, 32, 19 },
  { 192, 140, 32, 19 },
  { 224, 140, 32, 19 },
  { 256, 140, 32, 19 },
  { 288, 140, 32, 19 },
  { 0, 0, 48, 11 },
  { 0, 0, 48, 11 },
  { 144, 12, 48, 11 },
  { 192, 12, 48, 11 },
  { 96, 113, 48, 13 },
  { 144, 113, 48, 13 },
  { 0, 72, 16, 6 },
  { 16, 72, 16, 6 },
  { 32, 72, 16, 6 },
  { 48, 72, 16, 6 },
  { 64, 72, 16, 6 },
  { 80, 72, 16, 6 },
  { 96, 72, 16, 6 },
  { 112, 72, 16, 6 },
  { 128, 72, 16, 6 },
  { 144, 72, 16, 6 },
  { 0, 131, 16, 6 },
  { 16, 131, 16, 6 },
  { 32, 131, 16, 6 },
  { 48, 131, 16, 6 },
  { 64, 131, 16, 6 },
  { 80, 131, 16, 6 },
  { 96, 131, 16, 6 },
  { 112, 131, 16, 6 },
  { 128, 131, 16, 6 },
  { 144, 131, 16, 6 },
  { 192, 93, 16, 19 },
  { 224, 93, 16, 19 },
  { 208, 93, 16, 19 },
  { 240, 93, 16, 19 },
  { 256, 93, 16, 19 },
  { 272, 93, 16, 19 },
  { 288, 93, 16, 19 },
  { 160, 93, 32, 19 },
  { 0, 175, 48, 23 },
  { 48, 175, 16, 15 },
  { 64, 175, 48, 2 },
  { 64, 178, 48, 2 },
  { 64, 181, 48, 2 },
  { 192, 113, 48, 10 }
};

int16 word_35DFE[] = {
	0x21, 0x32, 0x42, 0x55,
	0x64, -1,
};

int16 word_35E0A[] = {
	0x21, 0x32, 0x42,
	0x55, 0x64, -1
};

int16 word_35E16[] = {
	0x21, 0x30, 0x42, 0x55, 0x64, -1,
};

int16 word_35E22[] = {
	0x21, 0x28, 0x42, 0x55, 0x64, -1,
};

int16 word_35E2E[] = {
	0x21, 0x3C, 0x42, 0x55, 0x64, -1
};

int16 word_35E3A[] = {
	0x32, 0x52, 0x64, -1
};

const sRecruitSpritePos mRecruitSprite[34] =
{
  { 0, 0, 48, 40, word_35DFE },
  { 0, 1, 48, 56, word_35E0A },
  { 0, 2, 48, 72, word_35E16 },
  { 0, 3, 48, 88, word_35E22 },
  { 0, 4, 48, 104, word_35E2E },
  { 0, 5, 48, 120, word_35E0A },
  { 0, 6, 48, 136, word_35E0A },
  { 0, 7, 48, 152, word_35E0A },
  { 0, 8, 48, 168, word_35E0A },
  { 1, 0, 144, 40, word_35E3A },
  { 1, 1, 192, 40, word_35E3A },
  { 2, 0, 240, 40, word_35E3A },
  { 2, 1, 144, 56, word_35E3A },
  { 3, 0, 192, 56, word_35E3A },
  { 3, 1, 240, 56, word_35E3A },
  { 4, 0, 144, 72, word_35E3A },
  { 4, 1, 192, 72, word_35E3A },
  { 5, 0, 240, 72, word_35E3A },
  { 5, 1, 144, 88, word_35E3A },
  { 6, 0, 192, 88, word_35E3A },
  { 6, 1, 240, 88, word_35E3A },
  { 7, 0, 144, 104, word_35E3A },
  { 7, 1, 192, 104, word_35E3A },
  { 8, 0, 240, 104, word_35E3A },
  { 8, 1, 144, 120, word_35E3A },
  { 9, 0, 192, 120, word_35E3A },
  { 9, 1, 240, 120, word_35E3A },
  { 10, 0, 144, 136, word_35E3A },
  { 10, 1, 192, 136, word_35E3A },
  { 11, 0, 240, 136, word_35E3A },
  { 11, 1, 144, 152, word_35E3A },
  { 12, 0, 192, 152, word_35E3A },
  { 12, 1, 240, 152, word_35E3A },
  { -1 }
};

const int16 word_3E197[] =
{
    4, 10, 4,  16,  22,
   10,  4, 22, 16,  10,
   22,  4, 16, 10,  22,
   10
};

const int16 mGravePositions[] = {
 0x00A3, 0x0018, 0x010B, 0x0025, 0x0050, 
 0x0023, 0x00F8, 0x0040, 0x003C, 0x002D, 
 0x009D, 0x001B, 0x00A7, 0x001D, 0x0054, 
 0x0026, 0x00A1, 0x001F, 0x004C, 0x0026, 
 0x0037, 0x0031, 0x0040, 0x0031, 0x0099, 
 0x001F, 0x00F5, 0x0043, 0x00FC, 0x0045, 
 0x0091, 0x001E, 0x0095, 0x0024, 0x00AE, 
 0x001D, 0x009E, 0x0022, 0x00A6, 0x0022, 
 0x00AC, 0x0023, 0x008C, 0x0022, 0x0085, 
 0x0025, 0x0090, 0x0026, 0x00B3, 0x0021, 
 0x00BB, 0x0023, 0x009B, 0x0028, 0x00A3, 
 0x0026, 0x00AB, 0x0029, 0x00B2, 0x0027, 
 0x00B9, 0x0029, 0x008A, 0x0028, 0x0080, 
 0x0028, 0x0085, 0x002B, 0x008F, 0x002D, 
 0x0095, 0x002A, 0x00A1, 0x002B, 0x00B1, 
 0x002D, 0x00A7, 0x002D, 0x0099, 0x002E, 
 0x009E, 0x0030, 0x00C0, 0x0027, 0x00BF, 
 0x002B, 0x00C7, 0x002A, 0x00B8, 0x002F, 
 0x00AC, 0x0030, 0x0050, 0x0029, 0x0058, 
 0x0029, 0x0055, 0x002D, 0x0131, 0x00BD, 
 0x007A, 0x002A, 0x0080, 0x002F, 0x0088, 
 0x002F, 0x00C4, 0x0030, 0x00CD, 0x0031, 
 0x0095, 0x0032, 0x008D, 0x0033, 0x0074, 
 0x002E, 0x0079, 0x0032, 0x0086, 0x0034, 
 0x00A5, 0x0032, 0x00B4, 0x0035, 0x00BD, 
 0x0032, 0x00C9, 0x0037, 0x00D4, 0x0036, 
 0x009F, 0x0037, 0x0092, 0x0038, 0x007F, 
 0x0036, 0x0073, 0x0034, 0x006D, 0x0036, 
 0x004B, 0x002B, 0x005C, 0x002C, 0x0063, 
 0x002B, 0x0060, 0x0030, 0x0034, 0x0034, 
 0x003D, 0x0038, 0x0044, 0x0036, 0x0049, 
 0x0033, 0x004C, 0x0038, 0x0045, 0x003B, 
 0x0038, 0x003B, 0x0030, 0x0038, 0x0033, 
 0x003F, 0x002E, 0x0043, 0x0034, 0x0045, 
 0x0039, 0x0041, 0x0040, 0x003F, 0x0053, 
 0x0038, 0x004C, 0x003D, 0x0047, 0x0041, 
 0x003F, 0x0045, 0x0039, 0x0049, 0x0033, 
 0x004C, 0x002D, 0x0048, 0x002E, 0x0050, 
 0x0031, 0x0055, 0x0037, 0x0050, 0x003F, 
 0x004A, 0x0045, 0x0046, 0x00AD, 0x00B5, 
 0x0107, 0x0029, 0x010F, 0x0029, 0x010C, 
 0x002C, 0x0101, 0x0027, 0x0115, 0x0028, 
 0x0114, 0x002B, 0x0111, 0x0030, 0x0109, 
 0x0030, 0x0103, 0x002C, 0x00FB, 0x002B, 
 0x00FF, 0x002F, 0x00F5, 0x002C, 0x0119, 
 0x002C, 0x011E, 0x002F, 0x0119, 0x0032, 
 0x0115, 0x0036, 0x0121, 0x0035, 0x010D, 
 0x0036, 0x0104, 0x0034, 0x00FA, 0x0031, 
 0x008A, 0x0039, 0x0099, 0x0039, 0x0096, 
 0x003E, 0x00A7, 0x0037, 0x00A3, 0x003D, 
 0x009E, 0x003F, 0x00AD, 0x0035, 0x00AC, 
 0x003A, 0x00B3, 0x003C, 0x00AA, 0x0040, 
 0x00B1, 0x0041, 0x00B9, 0x0035, 0x00C2, 
 0x0035, 0x00BE, 0x0039, 0x00BA, 0x003E, 
 0x00C3, 0x003D, 0x00CF, 0x003D, 0x00CA, 
 0x0040, 0x00D8, 0x003C, 0x008E, 0x003F, 
 0x0084, 0x003C, 0x0079, 0x003A, 0x0067, 
 0x0037, 0x0072, 0x003B, 0x007F, 0x003E, 
 0x009B, 0x0043, 0x0089, 0x0041, 0x0094, 
 0x0044, 0x00A4, 0x0042, 0x00B7, 0x0043, 
 0x00C1, 0x0043, 0x00D4, 0x0042, 0x00DB, 
 0x0044, 0x00F9, 0x0048, 0x0101, 0x0047, 
 0x00F3, 0x0047, 0x00FF, 0x004C, 0x00F3, 
 0x0030, 0x00EE, 0x0032, 0x00FE, 0x0035, 
 0x011C, 0x0038, 0x0111, 0x003B, 0x0108, 
 0x003B, 0x00F6, 0x0036, 0x00E9, 0x0033, 
 0x00F0, 0x0037, 0x00E5, 0x0037, 0x00EB, 
 0x003B, 0x00F0, 0x003C, 0x00FB, 0x0039, 
 0x0103, 0x003B, 0x010D, 0x003F, 0x0118, 
 0x003E, 0x0120, 0x003B, 0x0112, 0x0042, 
 0x0118, 0x0044, 0x0105, 0x004C, 0x00FB, 
 0x004F, 0x0103, 0x0052, 0x00ED, 0x0043, 
 0x00DF, 0x0040, 0x006C, 0x003C, 0x0076, 
 0x0040, 0x007F, 0x0044, 0x0086, 0x0045, 
 0x008E, 0x0047, 0x0099, 0x004A, 0x00A1, 
 0x0047, 0x00A8, 0x004B, 0x00B0, 0x0048, 
 0x00BA, 0x004B, 0x00C4, 0x004A, 0x00CC, 
 0x0047, 0x00D4, 0x0048, 0x00E1, 0x004A, 
 0x00DA, 0x004D, 0x00CF, 0x004E, 0x00C3, 
 0x0050, 0x0135, 0x00B1, 0x0135, 0x004B, 
 0x0132, 0x004F, 0x0135, 0x0057, 0x0130, 
 0x005A, 0x0135, 0x0063, 0x012F, 0x0064, 
 0x0135, 0x006D, 0x0109, 0x0052, 0x0061, 
 0x003C, 0x0067, 0x0040, 0x0071, 0x0045, 
 0x007A, 0x0049, 0x00B2, 0x0050, 0x0093, 
 0x004E, 0x00A3, 0x0052, 0x00BB, 0x0055, 
 0x00CC, 0x0056, 0x00D6, 0x0054, 0x00E2, 
 0x0052, 0x00E9, 0x004C, 0x0086, 0x004F, 
 0x0099, 0x0056, 0x006A, 0x0048, 0x005E, 
 0x0047, 0x0072, 0x0050, 0x007E, 0x0052, 
 0x008C, 0x0056, 0x00A1, 0x0059, 0x00AE, 
 0x0058, 0x00B7, 0x005D, 0x00C4, 0x005D, 
 0x00D3, 0x005D, 0x00DD, 0x005B, 0x00EB, 
 0x0056, 0x00E7, 0x005F, 0x00F4, 0x0057, 
 0x00F1, 0x0063, 0x00DE, 0x0067, 0x00D1, 
 0x0068, 0x00C9, 0x0063, 0x00BB, 0x0067, 
 0x00AA, 0x0063, 0x0099, 0x0062, 0x008E, 
 0x0061, 0x0083, 0x005C, 0x0077, 0x005D, 
 0x006B, 0x0056, 0x0061, 0x0050, 0x0056, 
 0x004F, 0x00A2, 0x0069, 0x0054, 0x0044, 
 0x004A, 0x0050, 0x0052, 0x0056, 0x005E, 
 0x005C, 0x007E, 0x0066, 0x0091, 0x0069, 
 0x009B, 0x006F, 0x00AE, 0x006E, 0x00BB, 
 0x0071, 0x00C5, 0x006C, 0x00CE, 0x0073, 
 0x00DA, 0x0070, 0x00E8, 0x006C, 0x0089, 
 0x006D, 0x006C, 0x0064, 0x0075, 0x006E, 
 0x00FB, 0x0063, 0x00F4, 0x006F, 0x00E4, 
 0x0076, 0x0057, 0x0062, 0x0049, 0x005C, 
 0x0062, 0x006B, 0x007F, 0x0077, 0x008D, 
 0x0075, 0x009A, 0x0078, 0x00A6, 0x0072, 
 0x00B4, 0x007A, 0x00BF, 0x007E, 0x00A4, 
 0x007E, 0x00D5, 0x007A, 0x00EE, 0x0074, 
 0x0104, 0x0064, 0x006B, 0x006F, 0x0058, 
 0x006B, 0x004D, 0x0064, 0x003F, 0x005D, 
 0x0050, 0x0070, 0x0043, 0x0066, 0x0037, 
 0x0064, 0x0030, 0x006C, 0x003C, 0x0072, 
 0x0046, 0x0073, 0x0059, 0x0076, 0x0065, 
 0x0077, 0x008A, 0x0082, 0x0072, 0x007A, 
 0x0095, 0x0083, 0x00B0, 0x0086, 0x00CB, 
 0x007D, 0x00E1, 0x0082, 0x0100, 0x006E, 
 0x00C6, 0x0089, 0x00BB, 0x008D, 0x00A2, 
 0x008D, 0x007E, 0x0087, 0x006B, 0x0085, 
 0x004B, 0x0080, 0x0034, 0x007F, 0x005C, 
 0x008A, 0x0040, 0x008A, 0x0071, 0x0092, 
 0x008C, 0x0094, 0x009C, 0x009B, 0x00B0, 
 0x0096, 0x00C6, 0x009A, 0x00D6, 0x008C, 
 0x00F6, 0x0081, 0x0101, 0x007B, 0x00EE, 
 0x008A, 0x00E5, 0x0094, 0x00D8, 0x009B, 
 0x00FC, 0x008F, 0x0109, 0x0084, 0x0101, 
 0x0085, 0x0107, 0x0095, 0x00F6, 0x0099, 
 0x00ED, 0x00A2, 0x00E0, 0x00A9, 0x00D0, 
 0x00AA, 0x00C1, 0x00AD, 0x00AF, 0x00A5, 
 0x009D, 0x00AB, 0x0088, 0x009B, 0x007B, 
 0x00A1, 0x0068, 0x009A, 0x0055, 0x0097, 
 0x0044, 0x009C, 0x0037, 0x0095, 0x0035, 
 0x00A3, 0x0048, 0x00A5, 0x005A, 0x00A6, 
 0x0084, 0x00B0, 0x006E, 0x00AA, 0x0091, 
 0x00AA, 0x00BC, 0x009F, 0x00F5, 0x00AB, 
 0x0104, 0x00A4, 0x00CD, 0x0091, 0x0093, 
 0x008B, 0x0079, 0x008D, 0x005F, 0x007F, 
 0x0050, 0x0088, 0x0060, 0x00AF, 0x0043, 
 0x00AF, 0x0051, 0x00AC, 0x00CB, 0x00B2, 
 0x00E9, 0x00AF, 0x0108, 0x0075, 0x0130, 
 0x006A, 0x0095, 0x00B6, 0x0115, 0x008A, 
 0x0000,
};

const int16 word_3E177[] = {
  0x18, 0x24, 0x18, 0x1E, 0x18, 
  0x2A, 0x18, 0x1E, 0x18, 0x18, 
  0x2A, 0x1E, 0x24, 0x1E, 0x18, 
  0x1E
};

const int8 byte_3E98F[] = {
  0, -1, -1, -1, -1, -1, -1, -1, -1, 1, 
  1, 1, 1, 1, 1, 1
};

const int16 word_3EABF[256] = {
	0, 804, 1608, 2410, 3212, 4011, 4808, 5602, 6393, 7179,
	7962, 8739, 9512, 10278, 11039, 11793, 12539, 13279, 14010, 14732,
	15446, 16151, 16846, 17530, 18204, 18867, 19519, 20159, 20787, 21402,
	22005, 22594, 23170, 23731, 24279, 24811, 25329, 25832, 26319, 26790,
	27245, 27683, 28105, 28510, 28898, 29268, 29621, 29956, 30273, 30571,
	30852, 31113, 31356, 31580, 31785, 31971, 32137, 32285, 32412, 32521,
	32609, 32678, 32728, 32757, 32767, 32757, 32728, 32678, 32609, 32521,
	32412, 32285, 32137, 31971, 31785, 31580, 31356, 31113, 30852, 30571,
	30273, 29956, 29621, 29268, 28898, 28510, 28105, 27683, 27245, 26790,
	26319, 25832, 25329, 24812, 24279, 23731, 23170, 22594, 22005, 21403,
	20787, 20159, 19519, 18868, 18204, 17530, 16846, 16151, 15446, 14732,
	14010, 13279, 12539, 11793, 11039, 10278, 9512, 8739, 7962, 7179,
	6393, 5602, 4808, 4011, 3212, 2411, 1608, 804, 0, -804,

	-1608, -2410, -3212, -4011, -4808, -5602, -6393, -7179, -7962, -8739,
	-9512, -10278, -11039, -11793, -12539, -13279, -14010, -14732, -15446, -16151,
	-16846, -17530, -18204, -18868, -19519, -20159, -20787, -21403, -22005, -22594,
	-23170, -23731, -24279, -24812, -25329, -25832, -26319, -26790, -27245, -27683,
	-28105, -28510, -28898, -29268, -29621, -29956, -30273, -30571, -30852, -31113,
	-31356, -31580, -31785, -31971, -32137, -32285, -32412, -32521, -32609, -32678,
	-32728, -32757, -32767, -32757, -32728, -32678, -32609, -32521, -32412, -32285,
	-32137, -31971, -31785, -31580, -31356, -31113, -30852, -30571, -30273, -29956,
	-29621, -29268, -28898, -28510, -28105, -27683, -27245, -26790, -26319, -25832,
	-25329, -24811, -24279, -23731, -23170, -22594, -22005, -21402, -20787, -20159,
	-19519, -18867, -18204, -17530, -16845, -16151, -15446, -14732, -14009, -13278,
	-12539, -11792, -11039, -10278, -9512, -8739, -7961, -7179, -6392, -5602,
	-4808, -4011, -3211, -2410, -1608, -804
};

const int8 byte_3ECC0[] = {
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
	30, 31, 1, 1, 2, 3, 4, 5, 6, 7, 
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
	28, 29, 30, 31, 2, 2, 3, 4, 4, 5, 
	6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
	16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 
	26, 27, 28, 29, 30, 31, 3, 3, 4, 4, 
	5, 6, 7, 8, 9, 9, 10, 11, 12, 13, 
	14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
	24, 25, 26, 27, 28, 29, 30, 31, 4, 4, 
	4, 5, 6, 6, 7, 8, 9, 10, 11, 12, 
	13, 14, 15, 16, 16, 17, 18, 19, 20, 21, 
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
	5, 5, 5, 6, 6, 7, 8, 9, 9, 10, 
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
	21, 22, 23, 24, 25, 25, 26, 27, 28, 29, 
	30, 31, 6, 6, 6, 7, 7, 8, 8, 9, 
	10, 11, 12, 13, 13, 14, 15, 16, 17, 18, 
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
	29, 30, 31, 32, 7, 7, 7, 8, 8, 9, 
	9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 
	17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
	27, 28, 29, 30, 31, 32, 8, 8, 8, 9, 
	9, 9, 10, 11, 11, 12, 13, 14, 14, 15, 
	16, 17, 18, 19, 20, 21, 22, 22, 23, 24, 
	25, 26, 27, 28, 29, 30, 31, 32, 9, 9, 
	9, 9, 10, 10, 11, 11, 12, 13, 13, 14, 
	15, 16, 17, 17, 18, 19, 20, 21, 22, 23, 
	24, 25, 26, 27, 28, 28, 29, 30, 31, 32, 
	10, 10, 10, 10, 11, 11, 12, 12, 13, 13, 
	14, 15, 16, 16, 17, 18, 19, 20, 21, 21, 
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
	32, 33, 11, 11, 11, 11, 12, 12, 13, 13, 
	14, 14, 15, 16, 16, 17, 18, 19, 19, 20, 
	21, 22, 23, 24, 25, 25, 26, 27, 28, 29, 
	30, 31, 32, 33, 12, 12, 12, 12, 13, 13, 
	13, 14, 14, 15, 16, 16, 17, 18, 18, 19, 
	20, 21, 22, 22, 23, 24, 25, 26, 27, 28, 
	29, 30, 30, 31, 32, 33, 13, 13, 13, 13, 
	14, 14, 14, 15, 15, 16, 16, 17, 18, 18, 
	19, 20, 21, 21, 22, 23, 24, 25, 26, 26, 
	27, 28, 29, 30, 31, 32, 33, 34, 14, 14, 
	14, 14, 15, 15, 15, 16, 16, 17, 17, 18, 
	18, 19, 20, 21, 21, 22, 23, 24, 24, 25, 
	26, 27, 28, 29, 30, 30, 31, 32, 33, 34, 
	15, 15, 15, 15, 16, 16, 16, 17, 17, 17, 
	18, 19, 19, 20, 21, 21, 22, 23, 23, 24, 
	25, 26, 27, 27, 28, 29, 30, 31, 32, 33, 
	34, 34, 16, 16, 16, 16, 16, 17, 17, 17, 
	18, 18, 19, 19, 20, 21, 21, 22, 23, 23, 
	24, 25, 26, 26, 27, 28, 29, 30, 31, 31, 
	32, 33, 34, 35, 17, 17, 17, 17, 17, 18, 
	18, 18, 19, 19, 20, 20, 21, 21, 22, 23, 
	23, 24, 25, 25, 26, 27, 28, 29, 29, 30, 
	31, 32, 33, 34, 34, 35, 18, 18, 18, 18, 
	18, 19, 19, 19, 20, 20, 21, 21, 22, 22, 
	23, 23, 24, 25, 25, 26, 27, 28, 28, 29, 
	30, 31, 32, 32, 33, 34, 35, 36, 19, 19, 
	19, 19, 19, 20, 20, 20, 21, 21, 21, 22, 
	22, 23, 24, 24, 25, 25, 26, 27, 28, 28, 
	29, 30, 31, 31, 32, 33, 34, 35, 36, 36, 
	20, 20, 20, 20, 20, 21, 21, 21, 22, 22, 
	22, 23, 23, 24, 24, 25, 26, 26, 27, 28, 
	28, 29, 30, 30, 31, 32, 33, 34, 34, 35, 
	36, 37, 21, 21, 21, 21, 21, 22, 22, 22, 
	22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 
	28, 28, 29, 30, 30, 31, 32, 33, 33, 34, 
	35, 36, 37, 37, 22, 22, 22, 22, 22, 23, 
	23, 23, 23, 24, 24, 25, 25, 26, 26, 27, 
	27, 28, 28, 29, 30, 30, 31, 32, 33, 33, 
	34, 35, 36, 36, 37, 38, 23, 23, 23, 23, 
	23, 24, 24, 24, 24, 25, 25, 25, 26, 26, 
	27, 27, 28, 29, 29, 30, 30, 31, 32, 33, 
	33, 34, 35, 35, 36, 37, 38, 39, 24, 24, 
	24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 
	27, 27, 28, 28, 29, 29, 30, 31, 31, 32, 
	33, 33, 34, 35, 35, 36, 37, 38, 38, 39, 
	25, 25, 25, 25, 25, 25, 26, 26, 26, 27, 
	27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 
	32, 33, 33, 34, 35, 35, 36, 37, 38, 38, 
	39, 40, 26, 26, 26, 26, 26, 26, 27, 27, 
	27, 28, 28, 28, 29, 29, 30, 30, 31, 31, 
	32, 32, 33, 33, 34, 35, 35, 36, 37, 37, 
	38, 39, 40, 40, 27, 27, 27, 27, 27, 27, 
	28, 28, 28, 28, 29, 29, 30, 30, 30, 31, 
	31, 32, 32, 33, 34, 34, 35, 35, 36, 37, 
	37, 38, 39, 40, 40, 41, 28, 28, 28, 28, 
	28, 28, 29, 29, 29, 29, 30, 30, 30, 31, 
	31, 32, 32, 33, 33, 34, 34, 35, 36, 36, 
	37, 38, 38, 39, 40, 40, 41, 42, 29, 29, 
	29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 
	31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 
	36, 37, 38, 38, 39, 40, 40, 41, 42, 42, 
	30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 
	32, 32, 32, 33, 33, 34, 34, 34, 35, 36, 
	36, 37, 37, 38, 38, 39, 40, 40, 41, 42, 
	42, 43, 31, 31, 31, 31, 31, 31, 32, 32, 
	32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 
	36, 36, 37, 37, 38, 39, 39, 40, 40, 41, 
	42, 42, 43, 44, 26
};

const int16 word_3D495[] = {
  0x18, 0x14, 0x0E, 0x0A, 0x08, 
  0x0A, 0x0E, 0x14
};

const int16 word_428DC[] =
{
   0x0180, 0x0040, 0x0004, 0x01A0, 0x0040, 
   0x000F, 0x01C0, 0x0040, 0x0007, 0x01E0, 
   0x0020, 0x0007, 0x0000, 0x0010, 0x000A, 
   0x0080, 0x0010, 0x001E, 0x0100, 0x0010, 
   0x000A, 0x01A0, 0x0008, 0x0019, 0x0170, 
   0x0064, 0x000A, -1, -1, -1
};

const int16 word_428CE[] = {
	0x00, 0x20, 0x40, 0x60 
};

int16 word_3D487[] = { 
	0, 1, 2, 3, 2, 1, 2 
};

uint8 byte_3D4A5[] = { 
	0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

int16 word_32AEC[] =
{
  0x00, 0x01, 0x02, 0x03, 0x04, 
  0x05, 0x06, 0x07, 0x20, 0x21, 
  0x22, 0x23, 0x24, 0x25, 0x26, 
  0x27, 0x28, 0x29, 0x22, 0x2B, 
  0x2C, 0x2D, 0x2E, 0x2F, 0x30, 
  0x31, 0x32, 0x33, 0x34, 0x35, 
  0x36, 0x37, 0x18, 0x19, 0x1A, 
  0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 
  0x08, 0x09, 0x0A, 0x0B, 0x0C, 
  0x0D, 0x0E, 0x0F, 0x10, 0x11, 
  0x12, 0x13, 0x14, 0x15, 0x16, 
  0x17, 0x39, 0x3A, 0x3B, 0x3C, 
  0x3D, 0x3E, 0x3F, 0x40, 0xB0, 
  0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 
  0xB6, 0xB7
};

int16 word_32B7C[] =
{
  0x42, 0x43, 0x44, 0x45, 0x46,
  0x47, 0x48, 0x49, 0x62, 0x63,
  0x64, 0x65, 0x66, 0x67, 0x68,
  0x69, 0x6A, 0x6B, 0x64, 0x6D,
  0x6E, 0x6F, 0x70, 0x71, 0x72,
  0x73, 0x74, 0x75, 0x76, 0x77,
  0x78, 0x79, 0x5A, 0x5B, 0x5C,
  0x5D, 0x5E, 0x5F, 0x60, 0x61,
  0x4A, 0x4B, 0x4C, 0x4D, 0x4E,
  0x4F, 0x50, 0x51, 0x52, 0x53,
  0x54, 0x55, 0x56, 0x57, 0x58,
  0x59, 0xA8, 0xA9, 0xAA, 0xAB,
  0xAC, 0xAD, 0xAE, 0xAF, 0xB8,
  0xB9, 0xBA, 0xBB, 0xBC, 0xBD,
  0xBE, 0xBF, 
};

int16* off_32AE4[] = {
	word_32AEC,
	word_32B7C
};

int8 byte_3D477[] = {
  0x0B, 0x0C, 0x0D, 0x14, 0x15, 0x16, 0x0D, 0x14
};

int8 byte_3D47F[] =
{
  -34, -1, -56, -1, 0x38, 0x00, 0x22, 0x00
};

const int16 word_3F0C1[] = {
	-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 64, 32, 16, 11, 8, 6, 5, 5, 
	4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 64, 48, 32, 21, 16, 13, 
	11, 9, 8, 7, 6, 6, 5, 5, 5, 4, 
	4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 
	2, 2, 2, 2, 2, 2, 64, 53, 43, 32, 
	24, 19, 16, 14, 12, 11, 10, 9, 8, 7, 
	7, 6, 6, 6, 5, 5, 5, 5, 4, 4, 
	4, 4, 4, 4, 3, 3, 3, 3, 64, 56, 
	48, 40, 32, 26, 21, 18, 16, 14, 13, 12, 
	11, 10, 9, 9, 8, 8, 7, 7, 6, 6, 
	6, 6, 5, 5, 5, 5, 5, 4, 4, 4, 
	64, 58, 51, 45, 38, 32, 27, 23, 20, 18, 
	16, 15, 13, 12, 11, 11, 10, 9, 9, 8, 
	8, 8, 7, 7, 7, 6, 6, 6, 6, 6, 
	5, 5, 64, 59, 53, 48, 43, 37, 32, 27, 
	24, 21, 19, 17, 16, 15, 14, 13, 12, 11, 
	11, 10, 10, 9, 9, 8, 8, 8, 7, 7, 
	7, 7, 6, 6, 64, 59, 55, 50, 46, 41, 
	37, 32, 28, 25, 22, 20, 19, 17, 16, 15, 
	14, 13, 12, 12, 11, 11, 10, 10, 9, 9, 
	9, 8, 8, 8, 7, 7, 64, 60, 56, 52, 
	48, 44, 40, 36, 32, 28, 26, 23, 21, 20, 
	18, 17, 16, 15, 14, 13, 13, 12, 12, 11, 
	11, 10, 10, 9, 9, 9, 9, 8, 64, 60, 
	57, 53, 50, 46, 43, 39, 36, 32, 29, 26, 
	24, 22, 21, 19, 18, 17, 16, 15, 14, 14, 
	13, 13, 12, 12, 11, 11, 10, 10, 10, 9, 
	64, 61, 58, 54, 51, 48, 45, 42, 38, 35, 
	32, 29, 27, 25, 23, 21, 20, 19, 18, 17, 
	16, 15, 15, 14, 13, 13, 12, 12, 11, 11, 
	11, 10, 64, 61, 58, 55, 52, 49, 47, 44, 
	41, 38, 35, 32, 29, 27, 25, 23, 22, 21, 
	20, 19, 18, 17, 16, 15, 15, 14, 14, 13, 
	13, 12, 12, 11, 64, 61, 59, 56, 53, 51, 
	48, 45, 43, 40, 37, 35, 32, 30, 27, 26, 
	24, 23, 21, 20, 19, 18, 17, 17, 16, 15, 
	15, 14, 14, 13, 13, 12, 64, 62, 59, 57, 
	54, 52, 49, 47, 44, 42, 39, 37, 34, 32, 
	30, 28, 26, 24, 23, 22, 21, 20, 19, 18, 
	17, 17, 16, 15, 15, 14, 14, 13, 64, 62, 
	59, 57, 55, 53, 50, 48, 46, 43, 41, 39, 
	37, 34, 32, 30, 28, 26, 25, 24, 22, 21, 
	20, 19, 19, 18, 17, 17, 16, 15, 15, 14, 
	64, 62, 60, 58, 55, 53, 51, 49, 47, 45, 
	43, 41, 38, 36, 34, 32, 30, 28, 27, 25, 
	24, 23, 22, 21, 20, 19, 18, 18, 17, 17, 
	16, 15, 64, 62, 60, 58, 56, 54, 52, 50, 
	48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 
	28, 27, 26, 24, 23, 22, 21, 20, 20, 19, 
	18, 18, 17, 17, 64, 62, 60, 58, 56, 55, 
	53, 51, 49, 47, 45, 43, 41, 40, 38, 36, 
	34, 32, 30, 29, 27, 26, 25, 24, 23, 22, 
	21, 20, 19, 19, 18, 18, 64, 62, 60, 59, 
	57, 55, 53, 52, 50, 48, 46, 44, 43, 41, 
	39, 37, 36, 34, 32, 30, 29, 27, 26, 25, 
	24, 23, 22, 21, 21, 20, 19, 19, 64, 62, 
	61, 59, 57, 56, 54, 52, 51, 49, 47, 45, 
	44, 42, 40, 39, 37, 35, 34, 32, 30, 29, 
	28, 26, 25, 24, 23, 23, 22, 21, 20, 20, 
	64, 62, 61, 59, 58, 56, 54, 53, 51, 50, 
	48, 46, 45, 43, 42, 40, 38, 37, 35, 34, 
	32, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
	21, 21, 64, 62, 61, 59, 58, 56, 55, 53, 
	52, 50, 49, 47, 46, 44, 43, 41, 40, 38, 
	37, 35, 34, 32, 31, 29, 28, 27, 26, 25, 
	24, 23, 22, 22, 64, 63, 61, 60, 58, 57, 
	55, 54, 52, 51, 49, 48, 47, 45, 44, 42, 
	41, 39, 38, 36, 35, 33, 32, 31, 29, 28, 
	27, 26, 25, 24, 23, 23, 64, 63, 61, 60, 
	58, 57, 56, 54, 53, 51, 50, 49, 47, 46, 
	45, 43, 42, 40, 39, 38, 36, 35, 33, 32, 
	31, 29, 28, 27, 26, 25, 25, 24, 64, 63, 
	61, 60, 59, 57, 56, 55, 53, 52, 51, 49, 
	48, 47, 45, 44, 43, 41, 40, 39, 37, 36, 
	35, 33, 32, 31, 30, 28, 27, 26, 26, 25, 
	64, 63, 61, 60, 59, 58, 56, 55, 54, 52, 
	51, 50, 49, 47, 46, 45, 44, 42, 41, 40, 
	38, 37, 36, 35, 33, 32, 31, 30, 29, 28, 
	27, 26, 64, 63, 62, 60, 59, 58, 57, 55, 
	54, 53, 52, 50, 49, 48, 47, 46, 44, 43, 
	42, 41, 39, 38, 37, 36, 34, 33, 32, 31, 
	30, 29, 28, 27, 64, 63, 62, 60, 59, 58, 
	57, 56, 55, 53, 52, 51, 50, 49, 47, 46, 
	45, 44, 43, 41, 40, 39, 38, 37, 36, 34, 
	33, 32, 31, 30, 29, 28, 64, 63, 62, 61, 
	59, 58, 57, 56, 55, 54, 53, 51, 50, 49, 
	48, 47, 46, 45, 43, 42, 41, 40, 39, 38, 
	37, 35, 34, 33, 32, 31, 30, 29, 64, 63, 
	62, 61, 60, 58, 57, 56, 55, 54, 53, 52, 
	51, 50, 49, 47, 46, 45, 44, 43, 42, 41, 
	40, 39, 38, 36, 35, 34, 33, 32, 31, 30, 
	64, 63, 62, 61, 60, 59, 58, 57, 55, 54, 
	53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 
	43, 42, 41, 39, 38, 37, 36, 35, 34, 33, 
	32, 31, 64, 63, 62, 61, 60, 59, 58, 57, 
	56, 55, 54, 53, 52, 51, 50, 49, 47, 46, 
	45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 
	35, 34, 33, 32, 
};

const int16 word_45718[] = {
	0, 0, 0, 0, 0, -1, 0, 0, 0, 0,
	0, 0, 0, -1, -1, -1, -1, -1, 0, 0,
	-1, 0, 0, 0, 0, -1, 0, -1, 0, 0,
	0, 0, 0, 0, 0, 0, -1, 0, 0, 0,
	-1, 0, -1, -1, -1, 0, -1, 0, 0, 0,
	0, 0, 0, 0, -1, -1, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -1, -1,
	-1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-1, -1, -1, 0, -1, -1, 0, 0, -1, 0,
	0, -1, -1, 0, 0, 0, 0, 0, 0, 0,
	-1, 0, 0, 0, 0, -1, -1, -1, -1, -1,
	-1
};

const struct_5 stru_3D35F[26] =
{
  { 70, 8, 7, 31, 0 },
  { 75, 8, 7, 31, 0 },
  { 80, 8, 7, 31, 0 },
  { 85, 8, 7, 31, 0 },
  { 85, 8, 6, 31, 0 },
  { 100, 7, 6, 15, 0 },
  { 100, 7, 6, 15, 0 },
  { 105, 7, 6, 15, 0 },
  { 105, 7, 5, 15, 0 },
  { 110, 7, 5, 15, 0 },
  { 130, 6, 5, 15, 0 },
  { 125, 7, 5, 7, 0 },
  { 125, 7, 4, 7, 0 },
  { 130, 7, 4, 7, 0 },
  { 115, 8, 4, 7, 0 },
  { 120, 8, 4, 7, 0 },
  { 120, 8, 3, 3, 0 },
  { 125, 8, 3, 3, 0 },
  { 130, 8, 3, 3, 0 },
  { 120, 9, 3, 3, 0 },
  { 120, 9, 3, 1, 0 },
  { 125, 9, 3, 1, 0 },
  { 130, 9, 3, 1, 0 },
  { 120, 10, 3, 1, 0 },
  { 125, 10, 3, 1, 0 },
  { 130, 10, 3, 1, 0 }
};

const int16 word_3DFC5[] = {
	0, 0, 1, 2, 0, 2, 1, 3, 2, 4, 
	2, 4, 2, 4, 4, 8, 2, 6, 4, 9, 
	6, 9, 7, 10, 8, 13, 6, 9, 6, 9, 
	6, 9, 3, 7, 1, 3, 7, 12, 1, 4, 
	2, 4, 0, 0, 6, 12, 3, 6, 4, 8, 
	5, 7, 5, 10, 7, 13, 1, 4, 11, 16, 
	4, 10, 5, 7, 8, 12, 2, 4, 6, 10, 
	0, 0, 0, 0, 6, 10, 6, 10, 6, 10, 
	6, 10, 6, 10, 6, 10, 6, 10, 6, 10, 
	7, 12, 6, 10, 6, 10, 6, 10, 6, 10, 
	2, 4, 2, 9, 3, 7, 6, 10, 6, 10, 
	6, 10, 3, 9, 6, 10, 6, 10, 3, 7, 
	3, 7, 15, 20, 3, 6, 6, 10, 6, 10, 
	6, 10, 6, 10, 10, 20, 6, 10, 6, 10, 
	6, 10, 6, 10
};

const int16 word_3DEF0[3] = { 0, 1, 2 };

const int16 word_3D593[] = {
	5, 36, 40, 42, 43, 44, 69, 80, 81, 82,
	84, 85, 105, 108, 109, 110, -1
};

const int16 word_3DE4C[] = {
	267, 268, 269, 287, 288, 289, 307, 308, 309, 98,
	177, 217, -1
};

const int16 word_3DE66[] = {
	9, 10, 11, 29, 30, 31, 50, -1
};

const int16 word_3DE76[] = {
	307, 308, 309, 327, 328, 329, 
	348, 349, 363, 378, 379, -1
};

const int16 word_3DE8E[] = {
	257, 276, 277, 160, 161, 162, 180, 
	181, 182, 201, 306, 384, 398, -1
};

const int16 word_3DEAA[] = {
	23, 40, 41, 42, 63, 103, 50, 51, 70, 
	71, 90, 91, 346, 331, 351, -1, 
};

const int16* off_3DE38[] = {
	word_3DE4C,		// JUN       
	word_3DE66,		// DES
	word_3DE76,		// ICE
	word_3DE8E,		// MOR
	word_3DEAA,		// INT
	word_3DE4C,		// HID
	word_3DE76		// AFX
};

const int16 word_4547E[] = {
	10, 0, 6, 0, 0, 10, 0, 24, 0, 0,
	0, 0, 0, 20, 10, 16, 10, 20, 0, 0,
	20, 0, 0, 0, 0, 20, 0, 10, 0, 0,
	0, 24, 0, 0, 0, 0, 10, 10, 10, 0,
	24, 0, 24, 24, 24, 0, 16, 0, 0, 24,
	24, 24, 24, 0, 10, 10, 0, 0, 0, 0,
	0, 10, 10, 24, 24, 24, 0, 0, 10, 24,
	10, 0, 10, 10, 20, 20, 20, 0, 24, 24,
	24, 24, 24, 10, 24, 24, 0, 0, 20, 0,
	20, 10, 10, 0, 0, 0, 0, 0, 0, 0,
	20, 24, 24, 24, 24, 24, 10, 24, 24, 24,
	24
};

const int16 word_4555C[] = {
	2, 0, 2, 0, 0, 2, 0, 5, 0, 0,
	0, 0, 0, 2, 2, 2, 2, 2, 0, 0,
	12, 0, 0, 0, 0, 12, 0, 2, 0, 0,
	0, 5, 0, 0, 0, 0, 2, 2, 2, 0,
	5, 0, 5, 5, 5, 0, 5, 0, 0, 5,
	5, 5, 5, 0, 2, 2, 0, 0, 0, 0,
	0, 2, 2, 5, 5, 5, 0, 0, 2, 5,
	2, 0, 2, 2, 12, 12, 12, 0, 5, 5,
	5, 5, 5, 2, 5, 5, 0, 0, 12, 0,
	12, 2, 2, 0, 0, 0, 0, 0, 0, 0,
	12, 5, 5, 5, 5, 5, 2, 5, 5, 5,
	5,
};

const int16 word_4563A[] = {
	3, 0, 2, 0, 0, 3, 0, 3, 0, 0,
	0, 0, 0, 2, 2, 2, 2, 2, 0, 0,
	3, 0, 0, 0, 0, 3, 0, 3, 0, 0,
	0, 3, 0, 0, 0, 0, 3, 3, 3, 0,
	3, 0, 3, 3, 3, 0, 3, 0, 0, 3,
	3, 3, 3, 0, 3, 3, 0, 0, 0, 0,
	0, 3, 3, 3, 3, 3, 0, 0, 3, 3,
	3, 0, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 0, 3, 0,
	3, 3, 3, 0, 0, 0, 0, 0, 0, 0,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3
};

const int16 word_3DF31[] = {
	0, 2, 1, 3, 2, 4, 3, 5, 4, 6,
	5, 7, 6, 8, 7, 9, 8, 10, -1
};

const int16 word_3D4D5[] = {
	0, -1
};

const int16 word_3D4D9[] = {
	0, 1, -1
};

const int16 word_3D4DF[] = {
	0, 1, 0, 2, -1
};

const int16 word_3D4E9[] = {
	0, 1, 0, 2, 0, 3, 0, 2, -1
};

const int16 word_3D4FB[] = {
	0, 1, 0, 2, 0, 3, 0, 4, 0, 3,
	0, 2, -1,
};


const int16 word_3D515[] = {
	0, 1, 0, 2, 0, 3, 0, 4, 0, 5,
	0, 4, 0, 3, 0, 2, -1
};

const int16 word_3D537[] = {
	0, 1, 0, 2, 0, 3, 0, 4, 0, 5,
	0, 6, 0, 5, 0, 4, 0, 3, 0, 2,
	-1, 
};

const int16 word_3D561[] = {
	0, 1, 0, 2, 0, 3, 0, 4, 0, 5,
	0, 6, 0, 5, 0, 4, 0, 3, 0, 2,
	-1, 0, 1, 0, 2, 0, 3, 0, 4, 0,
	5, 0, 6, 0, 7, 0, 6, 0, 5, 0,
	4, 0, 3, 0, 2, -1
};

const int16* off_3D4B5[] = {
	word_3D4D5,
	word_3D4D9,
	word_3D4DF,
	word_3D4E9,
	word_3D4FB,
	word_3D515,
	word_3D537,
	word_3D561
};

const int16 word_3DF05[] = {
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	158
};

const int16 word_3DF1B[] = {
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	168
};

const int16 word_3DF73[] = {
	0, 3, 4, 6, 1, 5, 8, 7, 2
};

const int8 byte_3DF02[] = {
	0x29, 0x4D, 0x71
};

const int16 word_453A0[] = {
	2, 0, 1, 0, 0, 2, 0, 1, 0, 0,
	2, 0, 0, 1, 1, 1, 1, 1, 0, 0,
	1, 0, 0, 0, 0, 1, 0, 2, 0, 0,
	0, 1, 0, 0, 0, 0, 2, 2, 2, 0,
	1, 0, 1, 1, 1, 0, 2, 0, 0, 1,
	1, 1, 1, 0, 2, 2, 0, 0, 0, 0,
	0, 2, 2, 1, 1, 1, 0, 0, 2, 1,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 2, 1, 1, 0, 0, 1, 0,
	1, 2, 2, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	1
};

const int16 word_3D5B9[] = {
	5, 7, 0, 0, 1, 4, 2, 3, 1, 0,
	1, 0, 0, -1, -2, -2, -1, -5, -2, 1,
	1, 2, 1, 0, 1, -1, 0, -1
};

const int16 word_3DDD2[] = {
	0, 0, 16, 16, -16, -32, -16, 16, 32, -16,
	-32, 32, 32, -16, -16, 16, -16, -32, 48, 48,
	-64, -48, 48, -16, -32, 64, 48, -64, 0, 32,
	-48, -32, -16, 48, 64, -32, -32, 48, 0, -64,
	-32, 32, 48, 32, -48, -64, 64, 48, -64, 16,
	-32768
};

const int8 byte_3E7DD[] = {
  0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 
  1, 1, 1, 1, 1, 1
};

const int16 word_3E856[] = {
	11, 5, 18, 5, 6, 5, 10, 6, 0, 7,
	6, 9, -2, 5, -1, 9, -2, -6, -2, 2,
	-2, -6, -2, 1, 5, -4, 8, -8, 7, -4,
	14, -8, 10, -8, 18, -8, 16, -8, 22, -6,
	17, -8, 22, -2, 19, -2, 25, 2, 22, -4,
	22, 2, 22, -2, 20, 5, 24, 2, 22, 7,
	25, 5, 20, 8
};

const int8 byte_3E916[] = {

	0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02,
	0x02, 0x02, 0x01, 0x01, 0x01, 0x01
};

const int16 word_3E926[] = { 
	1, 1, 1, 0, 0, 0, 1, 1, 0, 0,
	1, 0, 1, 0, 1, 2, 3, -1 
};

const int16 word_3E77D[] = {
	0, 7, -9, 6, -14, 3, -16, 0, -19, -7,
	-19, -12, -16, -16, -10, -20, -2, -22, 6, -20,
	12, -15, 16, -12, 18, -6, 16, 0, 12, 2,
	6, 5
};


const int8 byte_3E7BD[] = {   
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0x01, 0x00, 0x00, 0x00, 0x00 
};

const int16  word_3E8D6[] = {
	14, -16, 11, -15, 10, -16, 10, -20, 10, -23,
	10, -23, 11, -24, 13, -25, 14, -25, 16, -25,
	18, -23, 18, -22, 19, -23, 19, -20, 19, -16,
	19, -15
};

const int16 mSounds_Helicopter[] = { 
	4, 51, 52, 53, 54, 4, 51, 52 
};

const int16 word_3E952[] = {
	0, 0, 0, 0, 1, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1
};

const int16 mSprite_Hostage_Frames[] = {
	0, 1, 2, 1
};

const int16 word_3E972[] = {
	1, 2, 3, 2
};

const int16 word_3E97A[] = { 
	147, 143, 145, 143 
};

const int16 word_3E982[] = { 
	1, 0, 4, 0 
};

const int8 byte_44AC2[] = {
	0x00, 0x1B, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
	0x39, 0x30, 0x2D, 0x3D, 0x08, 0x09, 0x51, 0x57, 0x45, 0x52,
	0x54, 0x59, 0x55, 0x49, 0x4F, 0x50, 0x5B, 0x5D, 0x0D, 0x00,
	0x41, 0x53, 0x44, 0x46, 0x47, 0x48, 0x4A, 0x4B, 0x4C, 0x3B,
	0x27, 0x60, 0x00, 0x5C, 0x5A, 0x58, 0x43, 0x56, 0x42, 0x4E,
	0x4D, 0x2C, 0x2E, 0x2F, 0x00, 0x2A, 0x00, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x37, 0x38, 0x39, 0x2D, 0x34, 0x35, 0x36, 0x2B, 0x31,
	0x32, 0x33, 0x30, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00
};
